"""
Домашнее задание: Инкапсуляция, protected/private поля, наследование, @property

СЦЕНАРИЙ:
В ветеринарной клинике есть разные животные. У каждого животного есть кличка, возраст и владелец. 
У ветеринара есть список пациентов, которых он лечил.

1. Создай базовый класс `Animal`:
    - Приватные поля: __name, __age, __owner
    - Используй `@property`:
        - для чтения и изменения имени
        - для чтения и изменения возраста (не может быть меньше 0)
        - для чтения владельца (изменять нельзя)

2. Добавь метод `display_info()`, который выводит:
    Name: ...
    Age: ...
    Owner: ...

3. Создай класс `Dog`, который наследует `Animal` и добавляет:
    - защищённое поле `_breed` (порода)
    - `@property` для breed
    - переопредели `display_info()`, чтобы также показывалась порода

4. Создай класс `Vet`, который содержит:
    - приватное поле `__patients` — список животных, которых он лечил
    - метод `add_patient(animal)` — добавляет объект Animal или Dog
    - метод `list_patients()` — выводит список имён животных
    - защитись от добавления не-животных (например, строк)

5. В конце:
    - создай 2 собаки
    - измени возраст у одной из них через `@property`
    - создай ветеринара и добавь к нему животных
    - выведи всех пациентов

"""

# Ваш код...
